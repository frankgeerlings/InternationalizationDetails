// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.7.1.0
//      SpecFlow Generator Version:1.7.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace InternationalizationDetails.Spec
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.7.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("IDN e-mail addresses")]
    public partial class IDNE_MailAddressesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "IDN e-mail addresses.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "IDN e-mail addresses", @"In order to use diacritics and non-latin characters in e-mail addresses
As a math idiot
I want to convert human input to Punycode/IDN and back as described in
http://stackoverflow.com/questions/3140009/how-to-get-mailto-working-for-idn-email-ids
and http://idn.icann.org/E-mail_test", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Unicode to IDN")]
        public virtual void UnicodeToIDN()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Unicode to IDN", ((string[])(null)));
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("the e-mail address test@维奈.com");
#line 10
 testRunner.When("it is converted to PunyCode");
#line 11
 testRunner.Then("the result should be test@xn--ntsp09f.com");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Unicode test examples")]
        [NUnit.Framework.TestCaseAttribute("mailtest@مثال.إختبار", "mailtest@xn--mgbh0fb.xn--kgbechtv", "Arabic", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mailtest@例子.测试", "mailtest@xn--fsqu00a.xn--0zwm56d", "Simplified Chinese", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mailtest@例子.測試", "mailtest@xn--fsqu00a.xn--g6w251d", "Traditional Chinese", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mailtest@παράδειγμα.δοκιμή", "mailtest@xn--hxajbheg2az3al.xn--jxalpdlp", "Greek", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mailtest@उदाहरण.परीक्षा", "mailtest@xn--p1b6ci4b4b3a.xn--11b5bs3a9aj6g", "Devanagari (Hindi)", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mailtest@例え.テスト", "mailtest@xn--r8jz45g.xn--zckzah", "Kanji, Hiragana, Katakana (Japanese)", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mailtest@실례.테스트", "mailtest@xn--9n2bp8q.xn--9t4b11yi5a", "Hangul (Korean)", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mailtest@مثال.آزمایشی", "mailtest@xn--mgbh0fb.xn--hgbk6aj7f53bba", "Perso-Arabic (Persian)", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mailtest@пример.испытание", "mailtest@xn--e1afmkfd.xn--80akhbyknj4f", "Cyrillic (Russian)", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mailtest@உதாரணம்.பரிட்சை", "mailtest@xn--zkc6cc5bi7f6e.xn--hlcj6aya9esc7a", "Tamil", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mailtest@בײַשפּיל.טעסט", "mailtest@xn--fdbk5d8ap9b8a8d.xn--deba0ad", "Hebrew (Yiddish)", new string[0])]
        public virtual void UnicodeTestExamples(string iDNAddress, string punycode, string scriptLanguage, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Unicode test examples", exampleTags);
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
 testRunner.Given(string.Format("the e-mail address {0}", iDNAddress));
#line 15
 testRunner.When("it is converted to PunyCode");
#line 16
 testRunner.Then(string.Format("the result should be {0}", punycode));
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#endregion
